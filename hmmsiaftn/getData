#!/bin/bash
short=0
if [ $# == 1 ]
then
    if [ $1 == short ]
    then
        short=1
    fi
fi
echo $short
if [ $short == 0 ]
then
    if [ ! -d data ]
    then
        mkdir data
        zipFiles=$(ls ${HOME}/data/nsfAbstracts/*)
        for f in $zipFiles
        do
            unzip $f -d data/.
        done
    fi
fi
i=0
if [ $short == 1 ]
then
    echo "why true?"
    if [ ! -d bowFilesShort ]
    then
        mkdir bowFilesShort
    fi
    rm -rf moneyShort money
    xmlFiles=$(ls dataShort/*)
    for f in $xmlFiles
    do
        if [ $i == 5 ]
        then
            break
        fi
        newF=${f%.xml}
        newF=${newF#dataShort}
        if [ ${newF:1:2} -le 50 ]; then
            yearFull=20${newF:1:2}
        else
            yearFull=19${newF:1:2}
        fi
        if [ ! -d bowFilesShort/${yearFull} ]
        then
            echo "test: ${newF:1:2}"
            mkdir bowFilesShort/${yearFull}
        fi
        parsePy $f > bowFilesShort/${yearFull}/$newF
        eval i=$i+1
    done
    mv money moneyShort
else
    echo "Making bowFiles"
    if [ ! -d bowFiles ]
    then
        mkdir bowFiles
    fi
    rm -rf money
#todo fix break
    year=76
    y=76
    while [ $year -ne 15 ]
    do
        xmlFiles=$(ls data/${year}*)
        for f in $xmlFiles
        do
#        if [ $i == 5 ]
#        then
#            break
#        fi
            newF=${f%.xml}
            newF=${newF#data}
            if [ ${newF:1:2} -le 50 ]; then
                yearFull=20${newF:1:2}
            else
                yearFull=19${newF:1:2}
            fi
            if [ ! -d bowFiles/${yearFull} ]
            then
                mkdir bowFiles/${yearFull}
            fi
            parsePy $f > bowFiles/${yearFull}/$newF
        done
        eval i=$i+1
        let y=y+1
        year=`printf %02d $y`
        if [ $year -eq 100 ]
        then
            year=00
            y=0
        fi
    done
fi

if [ $short == 1 ]
then
    rainbow -d ./model --index bowFilesShort/*
    rainbow -d ./model --print-matrix > bowMatrix
    bowToMtxPy
else
    rainbow -d ./model --index bowFiles/*
    rainbow -d ./model --print-matrix > bowMatrix
    bowToMtxPy
fi
